library("ggplot2", lib.loc="h:/My Documents/R/R-3.4.1/library")
library("aod", lib.loc="h:/My Documents/R/R-3.4.1/library")
mydata <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
## view the first few rows of the data
head(mydata)
summary(mydata)
mydata$rank <- factor(mydata$rank)
mylogit <- glm(admit ~ gre + gpa + rank, data = mydata, family = "binomial")
summary(mylogit)
setwd("\\\\ai-fas3\\lcid_es\\Elaine\\Cerner Placeholder\\Steno")
library(ggplot2)
library(grid)
library(tidyverse)
library(DiagrammeR)
install.packages("DiagrammeR")
library(DiagrammeR)
install.packages("ggsave")
library(ggplot2)
library(grid)
library(tidyverse)
library(reshape)
raw<-read.csv("steno_plot_output.csv", header=T, stringsAsFactors = FALSE)
table<-table(raw$year_cat, raw$group)
print (table)
one<-c(2,1,7,7,19,22,23,26,
10,3,5,31,25,19,19,10)
two<-c("LVX","LVX","LVX","LVX","LVX","LVX","LVX","LVX",
"TMP-SMX","TMP-SMX","TMP-SMX","TMP-SMX","TMP-SMX","TMP-SMX","TMP-SMX","TMP-SMX")
three<-c("2000\n-2001", "2002\n-2003", "2004\n-2005", "2006\n-2007", "2008\n-2009", "2010\n-2011", "2012\n-2013", "2014\n-2015",
"2000\n-2001", "2002\n-2003", "2004\n-2005", "2006\n-2007", "2008\n-2009", "2010\n-2011", "2012\n-2013", "2014\n-2015")
trends<-data.frame(one, two, three)
trendplot<-ggplot(data=trends, aes(x=three, y=one, group=two)) +
geom_line(aes(linetype=two))+
geom_point()+
scale_colour_grey(name="Treatment Group")+
xlab("Year") + ylab("Number of Patients")
#         +  theme_bw()
print(trendplot)
trendplot_new <-ggsave(trendplot, plot=last_plot(), device=NULL, path=NULL,
scale=l, width=NA, height=NA, units=c("in", "cm", "mm"), dpi=1200, limitsize=TRUE)
trendplot_new <-ggsave(trendplot, plot=last_plot(), device= "tiff"L, path=NULL,
scale=l, width=NA, height=NA, units=c("in", "cm", "mm"), dpi=1200, limitsize=TRUE)
trendplot_new <-ggsave(trendplot, plot=last_plot(), device= "tiff", path=NULL,
scale=l, width=NA, height=NA, units=c("in", "cm", "mm"), dpi=1200, limitsize=TRUE)
trendplot_new <-ggsave(trendplot, plot=last_plot(), device= "tiff", path=NULL,
scale=l, width=10, height=4, units=c("in"), dpi=1200, limitsize=TRUE)
trendplot_new <-ggsave("trendplot.tiff", plot=last_plot(), device= "tiff", path=NULL,
scale=l, width=10, height=4, units=c("in"), dpi=1200, limitsize=TRUE)
ggsave("trendplot.tiff", plot=last_plot(), device= "tiff",
path="\\\\ai-fas3\\lcid_es\\CERNER data\\Commonwealth Cerner Placeholders\\Steno",
scale=l, width=10, height=4, units=c("in"), dpi=1200, limitsize=TRUE)
ggsave("trendplot.tiff", plot=last_plot(), device= "tiff",
path="\\\\ai-fas3\\lcid_es\\CERNER data\\Commonwealth Cerner Placeholders\\Steno",
scale=1, width=10, height=4, units=c("in"), dpi=1200, limitsize=TRUE)
ggsave("trendplot.tiff", plot=last_plot(), device= "tiff",
path="\\\\ai-fas3\\lcid_es\\CERNER data\\Commonwealth Cerner Placeholders\\Steno",
scale=1, width=8, height=4, units=c("in"), dpi=1200, limitsize=TRUE)
ggsave("trendplot.tiff", plot=last_plot(), device= "tiff",
path="\\\\ai-fas3\\lcid_es\\CERNER data\\Commonwealth Cerner Placeholders\\Steno",
scale=1, width=6, height=4, units=c("in"), dpi=1200, limitsize=TRUE)
parameters<-c("Targeted TMP-SMX \nvs. Targeted LVX", "SOFA Score", "Central Venous Catheter", "Admit Year")
aRR<-c(2.91, 1.38, 2.25, 0.84)
lower<- c(1.46, 1.22, 1.18, 0.74)
upper<- c(5.78, 1.56, 4.28, 0.96)
df<-data.frame(parameters, aRR, lower, upper)
fp<-ggplot(data=df, aes(x=parameters, y=aRR, ymin=lower, ymax=upper)) +
geom_pointrange()+
geom_hline(yintercept=1, lty=2) +
coord_flip() +
xlab("Parameters") + ylab("aRR for Mortality (95% CI)") +
theme_bw()+
theme(axis.text.y=element_text(size=16, face="bold"),
axis.title.y=element_text(size=14),
axis.title.x=element_text(size=14))
print(fp)
ggsave("forrestplot1200dpi.tiff", plot=last_plot(), device= "tiff",
path="\\\\ai-fas3\\lcid_es\\CERNER data\\Commonwealth Cerner Placeholders\\Steno",
scale=1, width=6, height=4, units=c("in"), dpi=1200, limitsize=TRUE)
ggsave("forrestplot1200dpi.tiff", plot=last_plot(), device= "tiff",
path="\\\\ai-fas3\\lcid_es\\CERNER data\\Commonwealth Cerner Placeholders\\Steno",
scale=1, width=10, height=4, units=c("in"), dpi=1200, limitsize=TRUE)
ggsave("forrestplot1200dpi.tiff", plot=last_plot(), device= "tiff",
path="\\\\ai-fas3\\lcid_es\\CERNER data\\Commonwealth Cerner Placeholders\\Steno",
scale=1, width=8, height=4, units=c("in"), dpi=1200, limitsize=TRUE)
fp<-ggplot(data=df, aes(x=parameters, y=aRR, ymin=lower, ymax=upper)) +
geom_pointrange()+
geom_hline(yintercept=1, lty=2) +
coord_flip() +
xlab("Parameters") + ylab("aRR for Mortality (95% CI)") +
theme_bw()+
theme(axis.text.y=element_text(size=14, face="bold"),
axis.title.y=element_text(size=12),
axis.title.x=element_text(size=12))
print(fp)
ggsave("forrestplot1200dpi.tiff", plot=last_plot(), device= "tiff",
path="\\\\ai-fas3\\lcid_es\\CERNER data\\Commonwealth Cerner Placeholders\\Steno",
scale=1, width=8, height=4, units=c("in"), dpi=1200, limitsize=TRUE)
ggsave("forrestplot1200dpi.tiff", plot=last_plot(), device= "tiff",
path="\\\\ai-fas3\\lcid_es\\CERNER data\\Commonwealth Cerner Placeholders\\Steno",
scale=1, width=7, height=4, units=c("in"), dpi=1200, limitsize=TRUE)
ggsave("trendplot.tiff", plot=last_plot(), device= "tiff",
path="\\\\ai-fas3\\lcid_es\\CERNER data\\Commonwealth Cerner Placeholders\\Steno",
scale=1, width=8, height=4, units=c("in"), dpi=1200, limitsize=TRUE)
print(trendplot)
ggsave("trendplot.tiff", plot=last_plot(), device= "tiff",
path="\\\\ai-fas3\\lcid_es\\CERNER data\\Commonwealth Cerner Placeholders\\Steno",
scale=1, width=8, height=4, units=c("in"), dpi=1200, limitsize=TRUE)
vignette("tibble")
med<-read.csv('\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\New Drugs\\UHC_Data_CSV\\sameer_180307_abx_medications.csv')
write.xlsx(med, '\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\New Drugs\\UHC_Data_CSV\\sameer_180307_abx_medications.xlsx')
library(xlsx)
write.xlsx(med, '\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\New Drugs\\UHC_Data_CSV\\sameer_180307_abx_medications.xlsx')
library(xlsx)
install.packages("xlsx")
library(xlsx)
write.xlsx(med, '\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\New Drugs\\UHC_Data_CSV\\sameer_180307_abx_medications.xlsx')
View(med)
View(med)
print[which (med$UHCGenericDescCode==720018)]
print[which (med$UHCGenericDescCode==720018), ]
print(med$UHCGenericDescCode==720018)
cazavi<-med[which (med$UHCGenericDescCode==720018), ]
install.packages("Hmisc")
library(Hmisc)
demo<-read.csv('\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\New Drugs\\UHC_Data_CSV\\sameer_180307_abx_demographics.csv')
describe(demo$Hospital_ID_Scrambled)
library(dplyr)
names(demo)
t<-demo %>% group_by(ID_consult) %>% count(n_distinct(Hospital_ID_Scrambled))
t
t<-demo %>% mutate(anyconsult=ifelse(!is.na(ID_consult), 1, 0))
table(t$anyconsult)
t<- t %>%  group_by(anyconsult) %>% count(n_distinct(Hospital_ID_Scrambled))
t
readxl::read_excel('\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\New Drugs\\ICD Codes in List.xls')
read.csv('\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\New Drugs\\ICD Codes in List.csv')
list<-read.csv('\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\New Drugs\\ICD Codes in List.csv')
list<-read.csv('\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\New Drugs\\ICD Codes in List.csv', header= FALSE)
install.packages(gsub)
install.packages('gsub')
library(gsub)
list<-read.csv('\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\New Drugs\\ICD Codes in List.csv', header= FALSE)
list<-read.csv('\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\New Drugs\\ICD Codes in List.csv')
list1<-gsub('.', '', list$icd)
list1<-c(gsub('.', '', list$icd))
list1<-data.frame(gsub('.', '', list$icd))
View(list1)
list1<-data.frame(gsub('\\.', '', list$icd))
write.csv(list1, file='\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\New Drugs\\ICD Codes in List1.csv')
reg<-read.csv("regression_for_figure.csv", header=T, stringsAsFactors = FALSE)
installed.packages()
library(dplyr)
install.packages("dplyr")
getwd()
library(dplyr)
install.packages("tidyverse")
read.csv("\\\\ai-fas3\\lcid_es\\ARORI\Data and Results\\Candida\\Candida epi\\Epi datasets\\candida_sterile_dems.csv")
read.csv("\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\Candida\\Candida epi\\Epi datasets\\candida_sterile_dems.csv")
dems<-read.csv("\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\Candida\\Candida epi\\Epi datasets\\candida_sterile_dems.csv")
View(dems)
micro<-read.csv("\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\Candida\\Candida epi\\Epi datasets\\candida_sterile_micro.csv")
View(micro)
diag<-read.csv("\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\Candida\\Candida epi\\Epi datasets\\candida_sterile_diag.csv")
View(diag)
proc<-read.csv("\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\Candida\\Candida epi\\Epi datasets\\candida_sterile_proc.csv")
View(proc)
meds<-read.csv("\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\Candida\\Candida epi\\Epi datasets\\candida_sterile_meds.csv")
View(meds)
setwd("C:\Users\laiy5\Desktop\DSCoLab-Spring-2018-Cohort-Material")
setwd("C:\\Users\\laiy5\\Desktop\\DSCoLab-Spring-2018-Cohort-Material")
service_data <- read.csv("Service_Data.csv")
service_data <- read.csv("Service_Data.csv")
service_data <- read.csv("Service_Data.csv")
getwd()
setwd("C:\\Users\\laiy5\\Desktop\\DSCoLab-Spring-2018-Cohort-Material")
setwd("C:\\Users\\laiy5\\Desktop\\DSCoLab-Spring-2018-Cohort-Material")
service_data <- read.csv("Service_Data.csv")
summary(service_data)
str(service_data$REQUESTCATEGORY)
class(service_data$FISCALYEAR)
mean(service_data$FISCALYEAR)
median(service_data$FISCALYEAR)
paste0("WORKORDERID ", sum(is.na(service_data$WORKORDERID)))
paste0("CANCELEDBY ", sum(is.na(service_data$CANCELEDBY)))
paste0("SQUARE ", sum(is.na(service_data$SQUARE)))
paste0("CANCELEDDATE ", sum(is.na(service_data$CANCELEDDATE)))
ncol(service_data)
colnames(service_data)
plot(cars)
plot(cars)
getwd()
rm(list = ls())
setwd("C:\\Users\\laiy5\\Desktop\\DSCoLab-Spring-2018-Cohort-Material")
library(plyr)
getwd()
service_data <- read.csv("Service_Data.csv")
summary(service_data)
summary(service_data)
rm(list = ls())
setwd("C:\\Users\\laiy5\\Desktop\\DSCoLab-Spring-2018-Cohort-Material")
library(plyr)
getwd()
service_data <- read.csv("Service_Data.csv")
getwd()
service_data <- read.csv("Service_Data.csv")
getwd()
setwd("C:\\Users\\laiy5\\Desktop\\DSCoLab-Spring-2018-Cohort-Material")
service_data <- read.csv("Service_Data.csv")
summary(service_data)
str(service_data$REQUESTCATEGORY)
?paste0()
?paste0()
paste0("WORKORDERID ", sum(is.na(service_data$WORKORDERID)))
paste0("CANCELEDBY ", sum(is.na(service_data$CANCELEDBY)))
paste0("SQUARE ", sum(is.na(service_data$SQUARE)))
paste0("CANCELEDDATE ", sum(is.na(service_data$CANCELEDDATE)))
is.na(service_data$WORKORDERID)
?paste0()
paste0("WORKORDERID ", sum(is.na(service_data$WORKORDERID)))
count(is.na(service_data$WORKORDERID))
paste0("CANCELEDBY ", sum(is.na(service_data$CANCELEDBY)))
paste0("SQUARE ", sum(is.na(service_data$SQUARE)))
paste0("CANCELEDDATE ", sum(is.na(service_data$CANCELEDDATE)))
sum(is.na(service_data$WORKORDERID))
service_data <- subset(service_data, select = -c(WORKORDERID, CANCELEDBY, SQUARE, CANCELEDDATE))
service_data <- subset(service_data, select = -c(INSPECTIONCOMPLETE, SUBMITTEDTODATE, DISPATCHEDTODATE, SUBMITTEDTO,   DISPATCHEDTO, PROJECTNAME, BID, AWI, EDZ, NIF, HISTORICDISTRICT, PUD, CFAR, SUFFIX, LOT))
singles<-read.csv("\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\FDA\\Data\\single_sample_encounters_06262018.csv", header=TRUE)
install.packages("readxl")
singles<-read.table("\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\FDA\\Data\\single_sample_encounters_06262018.xlsx", header=TRUE)
singles<-read.table("\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\FDA\\Data\\single_sample_encounters_06262018.xls", header=TRUE)
singles<-read.csv("\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\FDA\\Data\\single_sample_encounters_06262018.csv", header=TRUE)
View(singles)
View(singles)
library(tidyverse)
library(pacman)
pacman::p_load(tidyverse, highcharter)
if singles$dtr==1 {singles$highest=='DTR'
} else if (singles$cr==1) {
singles$highest=='CR'
} else if (singles$ecr==1) {
singles$highest=='ECR'
} else {singles$highest=='NULL'}
if singles$dtr==1 {
singles$highest=='DTR'
} else if (singles$cr==1) {
singles$highest=='CR'
} else if (singles$ecr==1) {
singles$highest=='ECR'
} else {singles$highest=='NULL'}
singles1<-if singles$dtr==1 {
singles$highest=='DTR'
} else if (singles$cr==1) {
singles$highest=='CR'
} else if (singles$ecr==1) {
singles$highest=='ECR'
} else {singles$highest=='NULL'}
ifelse(singles$ecr==1,'ECR','NULL')))
singles1<-singles%>%
mutate(highest= ifelse(singles$dtr==1, 'DTR',
ifelse(singles$cr==1, 'CR',
ifelse(singles$ecr==1,'ECR','NULL'))))
View(singles1)
singles_check<-filter(singles$dtr==1 & singles$cr==1)
singles_check<-filter(singles,singles$dtr==1 & singles$cr==1)
View(singles_check)
View(singles_check)
singles_check<-filter(singles1,singles1$dtr==1 & singles1$cr==1)
View(singles_check)
View(singles1)
singles1<-singles%>%
mutate(highest= ifelse(singles$dtr==1, 'DTR',
ifelse(singles$cr==1, 'CR',
ifelse(singles$ecr==1,'ECR',
ifelse(singles$fqr==1, 'FQR', 'NULL')))))
View(singles1)
singles1<-singles%>%
mutate(highest= ifelse(singles$dtr==1, 'DTR',
ifelse(singles$cr==1, 'CR',
ifelse(singles$ecr==1,'ECR',
ifelse(singles$fqr==1, 'FQR', 'NULL')))))%>%
group_by(culture_type, highest)%>%
summarise(count=n_distinct(encounter_id))
View(singles1)
View(singles1)
filter(singles1,culture_type=='blood'&highest=='CR')
filter(singles,culture_type=='blood'&highest=='CR')
singles1<-singles%>%
mutate(highest= ifelse(singles$dtr==1, 'DTR',
ifelse(singles$cr==1, 'CR',
ifelse(singles$ecr==1,'ECR',
ifelse(singles$fqr==1, 'FQR', 'NULL')))))
filter(singles1,culture_type=='blood'&highest=='CR')
singles1<-singles%>%
mutate(highest= ifelse(singles$dtr==1, 'DTR',
ifelse(singles$cr==1, 'CR',
ifelse(singles$ecr==1,'ECR',
ifelse(singles$fqr==1, 'FQR', 'NULL')))))%>%
group_by(culture_type, highest)%>%
summarise(count=n_distinct(encounter_id))
View(singles1)
sum<-singles1%>%summarise(all=sum(count))
View(sum)
View(sum)
sum<-singles1%>%ungroup()%>%summarise(all=sum(count))
View(sum)
multis<-read.csv("\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\FDA\\Data\\complex_encounters_06262018.csv",header=TRUE)
View(multis)
View(multis)
multis1<-multis%>%
mutate(highest=ifelse(multis$dtr==1, 'DTR',
ifelse(multis$cr==1, 'CR',
ifelse(multis$ecr==1,'ECR',
ifelse(multis$fqr==1, 'FQR', 'NULL')))))%>%
group_by(culture_type, highest)%>%
summarise(count=n_distinct(encounter_id))
View(multis1)
multis1<-multis%>%
mutate(highest=ifelse(multis$dtr==1, 'DTR',
ifelse(multis$cr==1, 'CR',
ifelse(multis$ecr==1,'ECR',
ifelse(multis$fqr==1, 'FQR', 'NULL')))))%>%
group_by(category, highest)%>%
summarise(count=n_distinct(encounter_id))
View(multis1)
View(singles1)
View(singles1)
View(multis1)
ifelse(singles1$culture_type=='blood',singles1$culture_type=='BSI',
ifelse(singles1$culture_type=='sputum',singles1$culture_type=='Respiratory',
ifelse(singles1$culture_type=='urine', singles1$culture_type=='Urinary', 'NULL')))
View(singles1)
single2<-singles1%>%ifelse(culture_type=='blood',culture_type=='BSI',
ifelse(culture_type=='sputum',culture_type=='Respiratory',
ifelse(culture_type=='urine', culture_type=='Urinary', 'NULL')))
single2<-singles1%>%ifelse(culture_type=='blood',category=='BSI',
ifelse(culture_type=='sputum',category=='Respiratory',
ifelse(culture_type=='urine', category=='Urinary', 'NULL')))
single2<-singles1%>%mutate(ifelse(culture_type=='blood',category=='BSI',
ifelse(culture_type=='sputum',category=='Respiratory',
ifelse(culture_type=='urine', category=='Urinary', 'NULL'))))
single2<-singles1%>%mutate(category=ifelse(culture_type=='blood', 'BSI',
ifelse(culture_type=='sputum','Respiratory',
ifelse(culture_type=='urine', 'Urinary', 'NULL'))))
singles<-read.csv("\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\FDA\\Data\\single_sample_encounters_06262018.csv", header=TRUE)
singles1<-singles%>%
mutate(highest= ifelse(singles$dtr==1, 'DTR',
ifelse(singles$cr==1, 'CR',
ifelse(singles$ecr==1,'ECR',
ifelse(singles$fqr==1, 'FQR', 'NULL')))))%>%
group_by(culture_type, highest)%>%
summarise(count=n_distinct(encounter_id))
#sum<-singles1%>%ungroup()%>%summarise(all=sum(count))
#counts are correct
multis<-read.csv("\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\FDA\\Data\\complex_encounters_06262018.csv",header=TRUE)
multis1<-multis%>%
mutate(highest=ifelse(multis$dtr==1, 'DTR',
ifelse(multis$cr==1, 'CR',
ifelse(multis$ecr==1,'ECR',
ifelse(multis$fqr==1, 'FQR', 'NULL')))))%>%
group_by(category, highest)%>%
summarise(count=n_distinct(encounter_id))
single2<-singles1%>%mutate(category=ifelse(culture_type=='blood', 'BSI',
ifelse(culture_type=='sputum','Respiratory',
ifelse(culture_type=='urine', 'Urinary', 'NULL'))))
View(single2)
?left_join
joined<-left_join(multis1,singles2,by=category&highest)
joined<-left_join(multis1,single2,by=category&highest)
View(single2)
View(multis1)
joined<-left_join(multis1,single2,by=category&highest)
joined<-left_join(multis1,single2,by=category)
joined<-left_join(multis1,single2,by='category')
joined<-left_join(multis1,single2,by='category'&'highest')
joined<-left_join(multis1,single2,by='category','highest')
View(joined)
joined<-left_join(multis1,single2,by=c("category"="category", "highest"="highest"))
View(joined)
joined<-left_join(multis1,single2,by=c("category"="category", "highest"="highest"))%>%
select(category, highest, x.count, y.count)
View(joined)
joined<-left_join(multis1,single2,by=c("category"="category", "highest"="highest"))%>%
select(category, highest, count.x, count.y)
View(joined)
joined<-left_join(multis1,single2,by=c("category"="category", "highest"="highest"))%>%
select(-culture_type)
View(joined)
joined<-left_join(multis1,single2,by=c("category"="category", "highest"="highest"))%>%
select(-culture_type)%>%
rename('counts_from_complex'=count.x, 'counts_from_singles'=count.y)
View(joined)
write.csv(joined, file='\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\FDA\\Data\\sum_resistance_by_culture_type.csv')
write.csv(joined, file='\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\FDA\\Data\\sum_resistance_by_culture_type.csv', row.names=FALSE)
write.csv(joined, file='\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\FDA\\Data\\sum_resistance_by_culture_type.csv', row.names=FALSE)
multis2<-multis%>%
mutate(highest=ifelse(multis$dtr==1, 'DTR',
ifelse(multis$cr==1, 'CR',
ifelse(multis$ecr==1,'ECR',
ifelse(multis$fqr==1, 'FQR', 'NULL')))))%>%
group_by(category, isolate_name, highest)%>%
summarise(count=n_distinct(encounter_id))
singles3<-singles%>%
mutate(highest= ifelse(singles$dtr==1, 'DTR',
ifelse(singles$cr==1, 'CR',
ifelse(singles$ecr==1,'ECR',
ifelse(singles$fqr==1, 'FQR', 'NULL')))))%>%
group_by(culture_type, isolate_name, highest)%>%
summarise(count=n_distinct(encounter_id))
View(singles3)
singles4<-singles3%>%mutate(category=ifelse(culture_type=='blood', 'BSI',
ifelse(culture_type=='sputum','Respiratory',
ifelse(culture_type=='urine', 'Urinary', 'NULL'))))
View(singles4)
joined1<-left_join(multis2,single4,by=c("category"="category", "highest"="highest", 'organism'='organism'))%>%
select(-culture_type)%>%
rename('counts_from_complex'=count.x, 'counts_from_singles'=count.y)
joined1<-left_join(multis2,singles4,by=c("category"="category", "highest"="highest", 'organism'='organism'))%>%
select(-culture_type)%>%
rename('counts_from_complex'=count.x, 'counts_from_singles'=count.y)
joined1<-left_join(multis2,singles4,by=c("category"="category", "highest"="highest", 'isolate_name'='isolate_name'))%>%
select(-culture_type)%>%
rename('counts_from_complex'=count.x, 'counts_from_singles'=count.y)
View(joined1)
write.csv(joined1, file='\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\FDA\\Data\\sum_resistance_by_culture_type_organism.csv', row.names=FALSE)
read.csv("\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\FDA\\Data\\all_encounters_with_resistance_06272018.csv",header=TRUE)
all_enc<-read.csv("\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\FDA\\Data\\all_encounters_with_resistance_06272018.csv",header=TRUE)
all_enc1<-all_enc%>%
mutate(highest= ifelse(singles$dtr==1, 'DTR',
ifelse(singles$cr==1, 'CR',
ifelse(singles$ecr==1,'ECR',
ifelse(singles$fqr==1, 'FQR', 'NULL')))))%>%
group_by(category, isolate_name, highest)%>%
summarise(count=n_distinct(encounter_id))
all_enc1<-all_enc%>%
mutate(highest= ifelse(dtr==1, 'DTR',
ifelse(cr==1, 'CR',
ifelse(ecr==1,'ECR',
ifelse(fqr==1, 'FQR', 'NULL')))))%>%
group_by(category, isolate_name, highest)%>%
summarise(count=n_distinct(encounter_id))
View(all_enc1)
write.csv(all_enc1, file='\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\FDA\\Data\\sum_resistance_by_culture_type_organism_enc.csv', row.names=FALSE)
all_enc2<-all_enc%>%
mutate(highest= ifelse(dtr==1, 'DTR',
ifelse(cr==1, 'CR',
ifelse(ecr==1,'ECR',
ifelse(fqr==1, 'FQR', 'NULL')))))%>%
group_by(category, highest)%>%
summarise(count=n_distinct(encounter_id))
write.csv(all_enc2, file='\\\\ai-fas3\\lcid_es\\ARORI\\Data and Results\\FDA\\Data\\sum_resistance_by_culture_type_enc.csv', row.names=FALSE)
install.packages("DiagrammeR")
setwd('C:\\Users\\laiy5\\Desktop\\capstone.elaine.lai')
library(tidyverse)
library(Hmisc)
library(chron)
####read in CSV####
steno<-read.csv("steno.csv", header=TRUE)
colnames(steno)[1]<-"ENCOUNTER_ID"
names(steno)
####adjust format for variables####
steno$ISOLATE_NAME_CHAR<-as.character(steno$ISOLATE_NAME)
#separate date and time#
steno1<-separate(steno, FIRST_REPORT_ENTERED_DT_TM,
into=c("FIRST_REPORT_ENTERED_DT", "FIRST_REPORT_ENTERED_TM"),
sep=" ",
convert=TRUE)%>%
separate(LAST_REPORT_UPDATED_DT_TM,
into=c("LAST_REPORT_UPDATED_DT", "LAST_REPORT_UPDATED_TM"),
sep=" ",
convert=TRUE)%>%
separate(MICRO_LAB_COMPLETED_DT_TM,
into=c("MICRO_LAB_COMPLETED_DT", "MICRO_LAB_COMPLETED_TM"),
sep=" ",
convert=TRUE)%>%
separate(MICRO_LAB_CANCELLED_DT_TM,
into=c("MICRO_LAB_CANCELLED_DT", "MICRO_LAB_CANCELLED_TM"),
sep=" ",
convert=TRUE)%>%
separate(MICRO_LAB_DRAWN_DT_TM,
into=c("MICRO_LAB_DRAWN_DT", "MICRO_LAB_DRAWN_TM"),
sep=" ",
convert=TRUE)%>%
separate(MICRO_LAB_ORDERED_DT_TM,
into=c("MICRO_LAB_ORDERED_DT", "MICRO_LAB_ORDERED_TM"),
sep=" ",
convert=TRUE)%>%
separate(MICRO_LAB_RECEIVED_DT_TM,
into=c("MICRO_LAB_RECEIVED_DT", "MICRO_LAB_RECEIVED_TM"),
sep=" ",
convert=TRUE)
steno1$FIRST_REPORT_ENTERED_DT_TM<-chron(dates=steno1$FIRST_REPORT_ENTERED_DT, times=steno1$FIRST_REPORT_ENTERED_TM,
format=c('y-m-d','h:m:s'))
steno1$LAST_REPORT_UPDATED_DT_TM<-chron(dates=steno1$LAST_REPORT_UPDATED_DT, times=steno1$LAST_REPORT_UPDATED_TM,
format=c('y-m-d','h:m:s'))
steno1$MICRO_LAB_COMPLETED_DT_TM<-chron(dates=steno1$MICRO_LAB_COMPLETED_DT, times=steno1$MICRO_LAB_COMPLETED_TM,
format=c('y-m-d','h:m:s'))
steno1$MICRO_LAB_CANCELLED_DT_TM<-chron(dates=steno1$MICRO_LAB_CANCELLED_DT, times=steno1$MICRO_LAB_CANCELLED_TM,
format=c('y-m-d','h:m:s'))
steno1$MICRO_LAB_DRAWN_DT_TM<-chron(dates=steno1$MICRO_LAB_DRAWN_DT, times=steno1$MICRO_LAB_DRAWN_TM,
format=c('y-m-d','h:m:s'))
steno1$MICRO_LAB_ORDERED_DT_TM<-chron(dates=steno1$MICRO_LAB_ORDERED_DT, times=steno1$MICRO_LAB_ORDERED_TM,
format=c('y-m-d','h:m:s'))
steno1$MICRO_LAB_RECEIVED_DT_TM<-chron(dates=steno1$MICRO_LAB_RECEIVED_DT, times=steno1$MICRO_LAB_RECEIVED_TM,
format=c('y-m-d','h:m:s'))
####Check lab_procedures####
list_of_lab_procedure<-as.data.frame(summary(steno1$LAB_PROCEDURE_NAME))
list_of_lab_procedure$lab_procedure_name<-rownames(list_of_lab_procedure)
colnames(list_of_lab_procedure)[1]<-"Count_Rows"
rownames(list_of_lab_procedure)<-NULL
combocounts<-group_by(steno1, LAB_PROCEDURE_NAME, COLLECTION_SOURCE_DESC, COLLECTION_SITE_DESC)%>%summarise(NUM_ENCOUNTERS=n_distinct(ENCOUNTER_ID))%>%arrange(desc(NUM_ENCOUNTERS))
print(tail(combocounts))
View(combocounts)
